# -*- coding: utf-8 -*-
"""aplle

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AfG_gwJAGKTathn3jiXWSVTpgLYK5dj2
"""

import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import files


uploaded = files.upload()

# Load your dataset
data = pd.read_csv("apple_products.csv")
data.head()

print("Null values in dataset:")
print(data.isnull().sum())

# Remove duplicate rows
data.drop_duplicates(inplace=True)

# Convert prices to integers
data["Sale Price"] = data["Sale Price"].astype(int)
data["Mrp"] = data["Mrp"].astype(int)
data["Discount Percentage"] = data["Discount Percentage"].astype(int)

data.describe()

plt.figure(figsize=(8,6))
sns.heatmap(data.corr(numeric_only=True), annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

highest_rated = data.sort_values(by="Star Rating", ascending=False).head(10)
highest_rated[["Product Name", "Star Rating", "Number Of Ratings", "Number Of Reviews"]]

px.bar(highest_rated, x="Product Name", y="Number Of Ratings",
       title="Number of Ratings of Highest Rated iPhones").show()

px.bar(highest_rated, x="Product Name", y="Number Of Reviews",
       title="Number of Reviews of Highest Rated iPhones").show()

px.scatter(data_frame=data, x="Number Of Ratings", y="Sale Price",
           size="Discount Percentage", trendline="ols",
           title="Relationship between Sale Price and Number of Ratings").show()

def bubble_sort(arr):
 n = len(arr)
 for i in range(n-1):
  for j in range(n-1-i):
   if arr[j] > arr[j+1]:
    arr[j], arr[j+1] = arr[j+1], arr[j]
 return arr

prices = list(data["Sale Price"][:10])
print("Original Prices:", prices)
sorted_prices = bubble_sort(prices.copy())
print("Sorted Prices:", sorted_prices)

